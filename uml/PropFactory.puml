@startuml
'https://plantuml.com/class-diagram

interface PropFactory {
    + createProp(int locationX, int locationY): AbstractProp
}

abstract class AbstractProp
{
    + AbstractProp(int locationX, int locationY,
    int speedX, int speedY)
    + forward():void
}

class BloodPropFactory {
    + createProp(int locationX, int locationY): AbstractProp
}

PropFactory <|.. BloodPropFactory

class BombPropFactory {
    + createProp(int locationX, int locationY): AbstractProp
}

PropFactory <|.. BombPropFactory

class BulletPropFactory {
    + createProp(int locationX, int locationY): AbstractProp
}

PropFactory <|.. BulletPropFactory

class BloodProp {
    + BloodProp(int locationX, int locationY,
    int speedX, int speedY)
    + bloodSupply(HeroAircraft heroAircraft):void
}

AbstractProp <|.. BloodProp
BloodPropFactory ..> BloodProp

class BombProp {
    + BombProp(int locationX, int locationY,
    int speedX, int speedY)
    + bombSupply(List<EnemyAircraft> enemyAircrafts):void
}

AbstractProp <|.. BombProp
BombPropFactory ..> BloodProp

class BulletProp {
    + BulletProp(int locationX, int locationY,
    int speedX, int speedY)
    + fireSupply(HeroAircraft heroAircraft):void
}

AbstractProp <|.. BulletProp
BulletPropFactory ..> BulletProp

@enduml