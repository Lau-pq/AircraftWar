@startuml
'https://plantuml.com/class-diagram

interface PropFactory {
    + createProp(int locationX, int locationY): AbstractProp
}

abstract class AbstractProp
{
    + AbstractProp(int locationX, int locationY,
    int speedX, int speedY)
    + forward(): void
    + {abstract} activate(HeroAircraft heroAircraft): void
}

PropFactory ..> AbstractProp

class BloodPropFactory {
    + createProp(int locationX, int locationY): AbstractProp
}

PropFactory <|.. BloodPropFactory


class BombPropFactory {
    + createProp(int locationX, int locationY): AbstractProp
}

PropFactory <|.. BombPropFactory

class BulletPropFactory {
    + createProp(int locationX, int locationY): AbstractProp
}

PropFactory <|.. BulletPropFactory

class BloodProp {
    - recoverHp: int
    + BloodProp(int locationX, int locationY,
    int speedX, int speedY)
    + activate(HeroAircraft heroAircraft): void
}

AbstractProp <|-- BloodProp

class BombProp {
    + BombProp(int locationX, int locationY,
    int speedX, int speedY)
    + activate(HeroAircraft heroAircraft): void
}

AbstractProp <|-- BombProp

class BulletProp {
    + BulletProp(int locationX, int locationY,
    int speedX, int speedY)
    + activate(HeroAircraft heroAircraft): void
}

AbstractProp <|-- BulletProp


@enduml