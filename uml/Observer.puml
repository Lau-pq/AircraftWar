@startuml
'https://plantuml.com/class-diagram

class BombProp {
    + BombProp(int locationX, int locationY, double speedX, double speedY)
    - flyingsObserverList:List<FlyingsObserver>
    + addflyingsObserver(FlyingsObserver flyingsObserver):void
    + notifyAllFlyings():void
    + activate(HeroAircraft heroAircraft):void
}

interface FlyingsObserver {
    + {abstract} update():void
}

BombProp o--> FlyingsObserver

abstract class EnemyAircraft
{
    # score:int
    # propNum:int
    - isNaturalDeath:boolean
    + EnemyAircraft(int locationX, int locationY, double speedX, double speedY, int hp)
    + getScore():int
    + getIsNaturalDeath():boolean
    + setIsNaturalDeath(boolean isNaturalDeath):void
    + dropProp():List<AbstractProp>
    + forward():void
}

class MobEnemy {
    + MobEnemy(int locationX, int locationY, double speedX, double speedY, int hp)
    + update():void
}

class EliteEnemy {
    + EliteEnemy(int locationX, int locationY, double speedX, double speedY, int hp)
    + update():void
}

class ElitePlusEnemy {
    + ElitePlusEnemy(int locationX, int locationY, double speedX, double speedY, int hp)
    + update():void
}

class BossEnemy {
    + BossEnemy(int locationX, int locationY, double speedX, double speedY, int hp)
    + update():void
}

EnemyAircraft <|-- MobEnemy
EnemyAircraft <|-- EliteEnemy
EnemyAircraft <|-- ElitePlusEnemy
EnemyAircraft <|-- BossEnemy

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY, double speedX, double speedY, int power)
    + update():void
}

FlyingsObserver <|.. EnemyAircraft
FlyingsObserver <|.. EnemyBullet


@enduml